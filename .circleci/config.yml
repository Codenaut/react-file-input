defaults: &defaults
  working_directory: ~/react-file-input
  docker:
    - image: circleci/node:12.16.2-stretch

whitelist: &whitelist
  paths:
    - .git/
    - node_modules/
    - src/
    - test/
    - tools/
    - docs
    - docs-www
    - .babelrc
    - .eslintrc.json
    - .gitignore
    - package.json
    - README.md
    - yarn.lock
    - webpack.config.dev.js
    - webpack.config.prod.js


version: 2
jobs:
  check_branch_name:
    docker:
      - image: circleci/node:12.16.2
    working_directory: ~/app
    steps:
      - run:
          name: fail if the branch name does not start with a valid prefix
          command: |
            branch=$CIRCLE_BRANCH
            if [[ "$branch" =~ ^(dependabot|fix|feature|breaking)/ || "$branch" == 'master' ]]
            then
              echo $branch is a valid name
            else
              echo $branch is not valid because the branch name must match '^(dependabot|fix|feature|breaking)/' or be master
              exit 1
            fi
  checkout:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependency-cache--{{ checksum "package.json" }}
          - dependency-cache--
      - run:
          name: Install Dependencies
          command: yarn install --non-interactive
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache--{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/react-file-input
          <<: *whitelist
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/react-file-input
      - run:
          name: Lint
          command: yarn lint -- --no-cache
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/react-file-input
      - run:
          name: Test
          command: yarn test:coverage
      - run:
          name: Generate coveralls config
          command: "echo repo_token: $COVERALLS_REPO_TOKEN > ./.coveralls.yml"
      - run:
          name: Upload coverage to coveralls
          command: cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/react-file-input
      - run: yarn build
      - run: cd docs-www && yarn install --non-interactive && yarn build
      - run: cd ..
  publish_package:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: configure GitHub user
          command: |
            git config --global user.email "devops@brainhub.pl"
            git config --global user.name "DevOps Brainhub"
            git remote -v
            git remote remove origin
            git remote add origin https://$GIT_TOKEN@github.com/brainhubeu/react-file-input
            git remote -v
            git add .
            git stash
      - run:
          name: bump NPM version
          command: |
            branch=`git log --oneline | grep '[0-9a-f]\{6,40\} Merge pull request #[0-9]\+ from brainhubeu/' | head -1 | sed 's@.* from brainhubeu/@@g' || true`
            echo branch=$branch
            if [[ "$branch" =~ ^(dependabot)/ ]]; then
              npm version patch -m "%s [ci skip]"
            elif [[ "$branch" =~ ^(fix)/ ]]; then
              npm version patch -m "%s [ci skip]"
            elif [[ "$branch" =~ ^(feature)/ ]]; then
              npm version minor -m "%s [ci skip]"
            elif [[ "$branch" =~ ^(breaking)/ ]]; then
              npm version major -m "%s [ci skip]"
            else
              echo $branch is not valid because the branch name must match '^(dependabot|fix|feature|breaking)/'
              exit 1
            fi
      - run: git pull --no-edit origin $CIRCLE_BRANCH
      - run: git push origin $CIRCLE_BRANCH
      - run:
          name: npm publish
          command: |
            yarn build
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
            npm publish
      - run:
          name: publish gh pages
          command: ./tools/deploy-gh-pages.sh

workflows:
  version: 2
  lint_and_test_and_publish:
    jobs:
      - check_branch_name
      - checkout:
          requires:
            - check_branch_name
      - lint:
          requires:
            - checkout
      - test:
          requires:
            - checkout
      - build:
          requires:
            - checkout
      - publish_package:
          requires:
            - lint
            - test
            - build
          filters:
            branches:
              only:
                - master
